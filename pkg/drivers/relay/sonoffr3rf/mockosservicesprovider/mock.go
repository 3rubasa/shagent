// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/3rubasa/shagent/pkg/drivers/relay/sonoffr3rf (interfaces: OSServicesProvider)

// Package mockosservicesprovider is a generated GoMock package.
package mockosservicesprovider

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOSServicesProvider is a mock of OSServicesProvider interface.
type MockOSServicesProvider struct {
	ctrl     *gomock.Controller
	recorder *MockOSServicesProviderMockRecorder
}

// MockOSServicesProviderMockRecorder is the mock recorder for MockOSServicesProvider.
type MockOSServicesProviderMockRecorder struct {
	mock *MockOSServicesProvider
}

// NewMockOSServicesProvider creates a new mock instance.
func NewMockOSServicesProvider(ctrl *gomock.Controller) *MockOSServicesProvider {
	mock := &MockOSServicesProvider{ctrl: ctrl}
	mock.recorder = &MockOSServicesProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOSServicesProvider) EXPECT() *MockOSServicesProviderMockRecorder {
	return m.recorder
}

// GetIPFromMAC mocks base method.
func (m *MockOSServicesProvider) GetIPFromMAC(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIPFromMAC", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIPFromMAC indicates an expected call of GetIPFromMAC.
func (mr *MockOSServicesProviderMockRecorder) GetIPFromMAC(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIPFromMAC", reflect.TypeOf((*MockOSServicesProvider)(nil).GetIPFromMAC), arg0)
}
