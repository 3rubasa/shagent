// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: pkg/grpcapi/grpcapi.proto

package grpcapi

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type KitchenTempMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T float32 `protobuf:"fixed32,1,opt,name=T,proto3" json:"T,omitempty"`
}

func (x *KitchenTempMessage) Reset() {
	*x = KitchenTempMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KitchenTempMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KitchenTempMessage) ProtoMessage() {}

func (x *KitchenTempMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KitchenTempMessage.ProtoReflect.Descriptor instead.
func (*KitchenTempMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{0}
}

func (x *KitchenTempMessage) GetT() float32 {
	if x != nil {
		return x.T
	}
	return 0
}

type RoomLightStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S            int64  `protobuf:"varint,1,opt,name=S,proto3" json:"S,omitempty"`
	Error        bool   `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *RoomLightStateMessage) Reset() {
	*x = RoomLightStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomLightStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomLightStateMessage) ProtoMessage() {}

func (x *RoomLightStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomLightStateMessage.ProtoReflect.Descriptor instead.
func (*RoomLightStateMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{1}
}

func (x *RoomLightStateMessage) GetS() int64 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *RoomLightStateMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *RoomLightStateMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RoomLightOpResultMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        bool   `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *RoomLightOpResultMessage) Reset() {
	*x = RoomLightOpResultMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomLightOpResultMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomLightOpResultMessage) ProtoMessage() {}

func (x *RoomLightOpResultMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomLightOpResultMessage.ProtoReflect.Descriptor instead.
func (*RoomLightOpResultMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{2}
}

func (x *RoomLightOpResultMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *RoomLightOpResultMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CamLightStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S            int64  `protobuf:"varint,1,opt,name=S,proto3" json:"S,omitempty"`
	Error        bool   `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CamLightStateMessage) Reset() {
	*x = CamLightStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamLightStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamLightStateMessage) ProtoMessage() {}

func (x *CamLightStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamLightStateMessage.ProtoReflect.Descriptor instead.
func (*CamLightStateMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{3}
}

func (x *CamLightStateMessage) GetS() int64 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *CamLightStateMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CamLightStateMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CamLightOpResultMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        bool   `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CamLightOpResultMessage) Reset() {
	*x = CamLightOpResultMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CamLightOpResultMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamLightOpResultMessage) ProtoMessage() {}

func (x *CamLightOpResultMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CamLightOpResultMessage.ProtoReflect.Descriptor instead.
func (*CamLightOpResultMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{4}
}

func (x *CamLightOpResultMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CamLightOpResultMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CellBalanceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B            float32 `protobuf:"fixed32,1,opt,name=B,proto3" json:"B,omitempty"`
	Error        bool    `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string  `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CellBalanceMessage) Reset() {
	*x = CellBalanceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellBalanceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellBalanceMessage) ProtoMessage() {}

func (x *CellBalanceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellBalanceMessage.ProtoReflect.Descriptor instead.
func (*CellBalanceMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{5}
}

func (x *CellBalanceMessage) GetB() float32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *CellBalanceMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CellBalanceMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CellInetBalanceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B            float32 `protobuf:"fixed32,1,opt,name=B,proto3" json:"B,omitempty"`
	Error        bool    `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string  `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CellInetBalanceMessage) Reset() {
	*x = CellInetBalanceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellInetBalanceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellInetBalanceMessage) ProtoMessage() {}

func (x *CellInetBalanceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellInetBalanceMessage.ProtoReflect.Descriptor instead.
func (*CellInetBalanceMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{6}
}

func (x *CellInetBalanceMessage) GetB() float32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *CellInetBalanceMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CellInetBalanceMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CellTariffMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T            string `protobuf:"bytes,1,opt,name=T,proto3" json:"T,omitempty"`
	Error        bool   `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CellTariffMessage) Reset() {
	*x = CellTariffMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellTariffMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellTariffMessage) ProtoMessage() {}

func (x *CellTariffMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellTariffMessage.ProtoReflect.Descriptor instead.
func (*CellTariffMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{7}
}

func (x *CellTariffMessage) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

func (x *CellTariffMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CellTariffMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CellPhoneNumberMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P            string `protobuf:"bytes,1,opt,name=P,proto3" json:"P,omitempty"`
	Error        bool   `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CellPhoneNumberMessage) Reset() {
	*x = CellPhoneNumberMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellPhoneNumberMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellPhoneNumberMessage) ProtoMessage() {}

func (x *CellPhoneNumberMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellPhoneNumberMessage.ProtoReflect.Descriptor instead.
func (*CellPhoneNumberMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{8}
}

func (x *CellPhoneNumberMessage) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *CellPhoneNumberMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CellPhoneNumberMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type PowerStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S            int64  `protobuf:"varint,1,opt,name=S,proto3" json:"S,omitempty"`
	Error        bool   `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *PowerStateMessage) Reset() {
	*x = PowerStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerStateMessage) ProtoMessage() {}

func (x *PowerStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerStateMessage.ProtoReflect.Descriptor instead.
func (*PowerStateMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{9}
}

func (x *PowerStateMessage) GetS() int64 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *PowerStateMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *PowerStateMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type BoilerStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S            int64  `protobuf:"varint,1,opt,name=S,proto3" json:"S,omitempty"`
	Error        bool   `protobuf:"varint,2,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *BoilerStateMessage) Reset() {
	*x = BoilerStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoilerStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoilerStateMessage) ProtoMessage() {}

func (x *BoilerStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoilerStateMessage.ProtoReflect.Descriptor instead.
func (*BoilerStateMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{10}
}

func (x *BoilerStateMessage) GetS() int64 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *BoilerStateMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *BoilerStateMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type BoilerOpResultMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error        bool   `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *BoilerOpResultMessage) Reset() {
	*x = BoilerOpResultMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoilerOpResultMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoilerOpResultMessage) ProtoMessage() {}

func (x *BoilerOpResultMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpcapi_grpcapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoilerOpResultMessage.ProtoReflect.Descriptor instead.
func (*BoilerOpResultMessage) Descriptor() ([]byte, []int) {
	return file_pkg_grpcapi_grpcapi_proto_rawDescGZIP(), []int{11}
}

func (x *BoilerOpResultMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *BoilerOpResultMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_pkg_grpcapi_grpcapi_proto protoreflect.FileDescriptor

var file_pkg_grpcapi_grpcapi_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x72, 0x70,
	0x63, 0x61, 0x70, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x22, 0x0a, 0x12, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x54, 0x65, 0x6d, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x54, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x54, 0x22, 0x5f, 0x0a, 0x15, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x53, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x18, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x14,
	0x43, 0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x17,
	0x43, 0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x5c, 0x0a, 0x12, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x42, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x42, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x60, 0x0a, 0x16, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x42, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x42, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x5b, 0x0a, 0x11, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x54, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x54, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x60,
	0x0a, 0x16, 0x43, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x50, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x5b, 0x0a, 0x11, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x01, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a,
	0x12, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01,
	0x53, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x42,
	0x6f, 0x69, 0x6c, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x89,
	0x09, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x54, 0x65, 0x6d, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x54, 0x75, 0x72,
	0x6e, 0x4f, 0x6e, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x69, 0x6c,
	0x65, 0x72, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x66, 0x66, 0x42, 0x6f,
	0x69, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x4f, 0x70, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x0f, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x70, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x10, 0x54, 0x75, 0x72, 0x6e, 0x4f, 0x66, 0x66, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x70, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x54,
	0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x43, 0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x54, 0x75, 0x72,
	0x6e, 0x4f, 0x66, 0x66, 0x43, 0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x61, 0x6d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43,
	0x65, 0x6c, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x65, 0x6c,
	0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x33, 0x72, 0x75, 0x62, 0x61, 0x73, 0x61,
	0x2f, 0x73, 0x68, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpcapi_grpcapi_proto_rawDescOnce sync.Once
	file_pkg_grpcapi_grpcapi_proto_rawDescData = file_pkg_grpcapi_grpcapi_proto_rawDesc
)

func file_pkg_grpcapi_grpcapi_proto_rawDescGZIP() []byte {
	file_pkg_grpcapi_grpcapi_proto_rawDescOnce.Do(func() {
		file_pkg_grpcapi_grpcapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpcapi_grpcapi_proto_rawDescData)
	})
	return file_pkg_grpcapi_grpcapi_proto_rawDescData
}

var file_pkg_grpcapi_grpcapi_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_grpcapi_grpcapi_proto_goTypes = []interface{}{
	(*KitchenTempMessage)(nil),       // 0: grpcapi.KitchenTempMessage
	(*RoomLightStateMessage)(nil),    // 1: grpcapi.RoomLightStateMessage
	(*RoomLightOpResultMessage)(nil), // 2: grpcapi.RoomLightOpResultMessage
	(*CamLightStateMessage)(nil),     // 3: grpcapi.CamLightStateMessage
	(*CamLightOpResultMessage)(nil),  // 4: grpcapi.CamLightOpResultMessage
	(*CellBalanceMessage)(nil),       // 5: grpcapi.CellBalanceMessage
	(*CellInetBalanceMessage)(nil),   // 6: grpcapi.CellInetBalanceMessage
	(*CellTariffMessage)(nil),        // 7: grpcapi.CellTariffMessage
	(*CellPhoneNumberMessage)(nil),   // 8: grpcapi.CellPhoneNumberMessage
	(*PowerStateMessage)(nil),        // 9: grpcapi.PowerStateMessage
	(*BoilerStateMessage)(nil),       // 10: grpcapi.BoilerStateMessage
	(*BoilerOpResultMessage)(nil),    // 11: grpcapi.BoilerOpResultMessage
	(*empty.Empty)(nil),              // 12: google.protobuf.Empty
}
var file_pkg_grpcapi_grpcapi_proto_depIdxs = []int32{
	12, // 0: grpcapi.StateProvider.GetKitchenTemp:input_type -> google.protobuf.Empty
	12, // 1: grpcapi.StateProvider.GetPowerState:input_type -> google.protobuf.Empty
	12, // 2: grpcapi.StateProvider.GetBoilerState:input_type -> google.protobuf.Empty
	12, // 3: grpcapi.StateProvider.TurnOnBoiler:input_type -> google.protobuf.Empty
	12, // 4: grpcapi.StateProvider.TurnOffBoiler:input_type -> google.protobuf.Empty
	12, // 5: grpcapi.StateProvider.GetRoomLightState:input_type -> google.protobuf.Empty
	12, // 6: grpcapi.StateProvider.TurnOnRoomLight:input_type -> google.protobuf.Empty
	12, // 7: grpcapi.StateProvider.TurnOffRoomLight:input_type -> google.protobuf.Empty
	12, // 8: grpcapi.StateProvider.GetCamLightState:input_type -> google.protobuf.Empty
	12, // 9: grpcapi.StateProvider.TurnOnCamLight:input_type -> google.protobuf.Empty
	12, // 10: grpcapi.StateProvider.TurnOffCamLight:input_type -> google.protobuf.Empty
	12, // 11: grpcapi.StateProvider.GetCellBalance:input_type -> google.protobuf.Empty
	12, // 12: grpcapi.StateProvider.GetCellInetBalance:input_type -> google.protobuf.Empty
	12, // 13: grpcapi.StateProvider.GetCellTariff:input_type -> google.protobuf.Empty
	12, // 14: grpcapi.StateProvider.GetCellPhoneNumber:input_type -> google.protobuf.Empty
	0,  // 15: grpcapi.StateProvider.GetKitchenTemp:output_type -> grpcapi.KitchenTempMessage
	9,  // 16: grpcapi.StateProvider.GetPowerState:output_type -> grpcapi.PowerStateMessage
	10, // 17: grpcapi.StateProvider.GetBoilerState:output_type -> grpcapi.BoilerStateMessage
	11, // 18: grpcapi.StateProvider.TurnOnBoiler:output_type -> grpcapi.BoilerOpResultMessage
	11, // 19: grpcapi.StateProvider.TurnOffBoiler:output_type -> grpcapi.BoilerOpResultMessage
	1,  // 20: grpcapi.StateProvider.GetRoomLightState:output_type -> grpcapi.RoomLightStateMessage
	2,  // 21: grpcapi.StateProvider.TurnOnRoomLight:output_type -> grpcapi.RoomLightOpResultMessage
	2,  // 22: grpcapi.StateProvider.TurnOffRoomLight:output_type -> grpcapi.RoomLightOpResultMessage
	3,  // 23: grpcapi.StateProvider.GetCamLightState:output_type -> grpcapi.CamLightStateMessage
	4,  // 24: grpcapi.StateProvider.TurnOnCamLight:output_type -> grpcapi.CamLightOpResultMessage
	4,  // 25: grpcapi.StateProvider.TurnOffCamLight:output_type -> grpcapi.CamLightOpResultMessage
	5,  // 26: grpcapi.StateProvider.GetCellBalance:output_type -> grpcapi.CellBalanceMessage
	6,  // 27: grpcapi.StateProvider.GetCellInetBalance:output_type -> grpcapi.CellInetBalanceMessage
	7,  // 28: grpcapi.StateProvider.GetCellTariff:output_type -> grpcapi.CellTariffMessage
	8,  // 29: grpcapi.StateProvider.GetCellPhoneNumber:output_type -> grpcapi.CellPhoneNumberMessage
	15, // [15:30] is the sub-list for method output_type
	0,  // [0:15] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_grpcapi_grpcapi_proto_init() }
func file_pkg_grpcapi_grpcapi_proto_init() {
	if File_pkg_grpcapi_grpcapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpcapi_grpcapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KitchenTempMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomLightStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomLightOpResultMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamLightStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CamLightOpResultMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellBalanceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellInetBalanceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellTariffMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellPhoneNumberMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoilerStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpcapi_grpcapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoilerOpResultMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpcapi_grpcapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpcapi_grpcapi_proto_goTypes,
		DependencyIndexes: file_pkg_grpcapi_grpcapi_proto_depIdxs,
		MessageInfos:      file_pkg_grpcapi_grpcapi_proto_msgTypes,
	}.Build()
	File_pkg_grpcapi_grpcapi_proto = out.File
	file_pkg_grpcapi_grpcapi_proto_rawDesc = nil
	file_pkg_grpcapi_grpcapi_proto_goTypes = nil
	file_pkg_grpcapi_grpcapi_proto_depIdxs = nil
}
